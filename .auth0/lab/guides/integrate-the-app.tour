{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "4: Integrate the application with Okta FGA",
  "steps": [
    {
      "title": "Install dependencies",
      "description": "## Install dependencies\n1. Click [here](command:codetour.sendTextToTerminal?[\"npm install\"]) to install the application dependencies.\n\n> Note: This runs the command `npm install`"
    },
    {
      "file": "src/app/authorization.ts",
      "description": "## Install the OpenFGA SDK\n\nSince we'll be integrating this application with Okta FGA, we'll need to install the OpenFGA SDK (referenced here in `authorization.ts`).\n1. Click [here](command:codetour.sendTextToTerminal?[\"npm install @openfga/sdk\"]) to install the OpenFGA SDK\n\n> Note: this runs the command `npm install @openfga/sdk`.\n",
      "line": 2
    },
    {
      "file": "src/app/authorization.ts",
      "description": "## Instantiate an OpenFgaClient\n\nIn this section of `authorization.ts` we instantiate a new `OpenFgaClient` using the FGA environment variables we set earlier in the `.env` file.\n\nAs a reminder:\n\n- `apiUrl`: The URL to your Okta FGA in the form of `https://api.<region>1.fga.dev`\n- `storeId`: Found in your Okta FGA Dashboard.\n- `authorizationModelId`: Found in your Okta FGA Dashboard. **Note: this changes with each update to your model.**\n- `apiTokenIssuer`: This is currently always `fga.us.auth0.com` when using Okta FGA.\n- `apiAudience`: The same as your `apiUrl` with a trailing slash `/`.\n- `clientId` and `clientSecret`: Can be found in your Okta FGA Dashboard.",
      "selection": {
        "start": {
          "line": 7,
          "character": 1
        },
        "end": {
          "line": 20,
          "character": 28
        }
      }
    },
    {
      "file": "src/app/authorization.ts",
      "description": "## `check()` method\n\nHere we use OpenFGA's `check()` method, which is a method that checks if there's a relationship between a consumer and a resource. In this case, we're checking if a particular user is the owner of a specific folder.",
      "selection": {
        "start": {
          "line": 23,
          "character": 1
        },
        "end": {
          "line": 27,
          "character": 28
        }
      },
      "title": "check() method"
    },
    {
      "file": "src/app/authorization.ts",
      "description": "## `writeTuples()` method\n\nHere we use OpenFGA's `writeTuples()` method, which writes a new tuples containing data about specific relationships to our Okta FGA store. Here's we're creating a new tuple specifying that a particular user is the owner of a particular folder.",
      "selection": {
        "start": {
          "line": 30,
          "character": 1
        },
        "end": {
          "line": 36,
          "character": 28
        }
      },
      "title": "writeTuples() method"
    },
    {
      "file": "",
      "line": 1,
      "title": "Deploy the application",
      "description": "## Deploy the application\n1. Before deplying the application, navigate to the **PORTS** tab near the bottom of this screen.\n1. Right click on the entry with the port **3000**.\n1. Select **Port Visibility** > **Public**.\n1. Click [here](command:codetour.sendTextToTerminal?[\"npm run dev\"]) to deploy the application.\n1. If the application doesn't automatically launch in a new browser tab, you can click the globe icon under **Forwarded Address** in the **PORTS** section here.\n\n",
      "selection": {
        "start": {
          "line": 1,
          "character": 4
        },
        "end": {
          "line": 1,
          "character": 35
        }
      }
    },
    {
      "title": "Test the application",
      "description": "## Test the application\n1. First, complete the sign up process to create an end user account to access your application.\n1. Once you're signed up and signed in, select **Add Folder**.\n1. Name the folder **test** and select **Create Folder**.\n1. Switch to the tab where you are logged into the Okta FGA dashboard.\n1. Select **Tuple Management**.\n\n> You should now see that you have some non-test relationship tuples that reference your Auth0 end user's ID and the ID of the folder you just created! This should appear similar to below:\n\n![img](https://cdn.auth0.com/website/auth0-training/oktafga/fga-real-tuples.png)"
    }
  ]
}